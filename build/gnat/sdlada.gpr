library project SDLAda is
   type Platform_Type is ("linux", "bsd", "windows", "macosx", "macos_homebrew", "macos_ports", "ios", "android");
   type Mode_Type is ("debug", "release");

   Platform : Platform_Type := external ("SDL_PLATFORM", "linux");
   Mode     : Mode_Type     := external ("SDL_MODE", "debug");

   Source_Platform := "";

   case Platform is
      when "macos_homebrew" | "macos_ports" =>
         Source_Platform := "../../src/macosx";

      when others =>
         Source_Platform := "../../src/" & Platform;
   end case;

   Source_Platform_Linker := "";

   case Platform is
      when "macosx" =>
         Source_Platform_Linker := "../../src/link/macosx";

      when others =>
         Source_Platform_Linker := "../../src/link/nix";
   end case;

   for Languages    use ("Ada", "C");
   for Source_Dirs  use ("../../src",
                         "../../src/audio",
                         "../../src/events",
                         "../../src/inputs",
                         "../../src/rwops",
                         "../../src/video",
                         "gen/src/",
                         Source_Platform,
                         Source_Platform_Linker);

   for Library_Name use "sdlada";
   for Object_Dir   use "gen/" & Mode & "/lib/.obj";
   for Library_Dir  use "gen/" & Mode &  "/lib";
   for Library_Kind use "static";

   package Compiler is
      Common_Switches := ("-ffunction-sections", "-fdata-sections");
      C_Switches      := ();
      Ada_Switches    := ("-gnat2022", "-gnata", "-gnato", "-gnatwa", "-gnatwaJ", "-gnaty", "-gnaty-s", "-gnatyO",
                          "-gnatyM120", "-gnatyx");

      case Mode is
         when "debug" =>
            Common_Switches := Common_Switches  & ("-O0", "-g", "-ggdb");

         when "release" =>
            Common_Switches := Common_Switches & ("-O2");
      end case;

      --  All GCC releases up to & including 13.2 give errors when
      --  using SDK 15, because Apple have used a new macro
      --  unsupported by GCC.
      case Platform is
         when "macosx" | "macos_homebrew" | "macos_ports" =>
            for Driver ("C") use "clang";

         when others =>
            null;
      end case;

      --  These flags require checking on all platforms as they're taken directly from sdl2-config.
      case Platform is
         when "linux" | "bsd" | "android" | "windows" =>
            C_Switches   := C_Switches & ("-I/usr/include/SDL2", "-D_REENTRANT");

         when "macos_homebrew" =>
            C_Switches   := C_Switches & ("-DSDL_HOMEBREW",
                                          "-I"
                                          & external ("HOMEBREW_PREFIX")
                                          & "/include",
                                          "-D_REENTRANT");

         when "macos_ports" =>
            C_Switches   := C_Switches & ("-DSDL_MACPORTS",
                                          "-I/opt/local/include",
                                          "-D_REENTRANT");

         when others =>
            null;
      end case;

      for Default_Switches ("C") use Common_Switches & C_Switches;
      for Default_Switches ("Ada") use Common_Switches & Ada_Switches;
   end Compiler;

   package Linker is
      for Default_Switches ("ada") use ("-Wl,-ld_classic");
   end Linker;

end SDLAda;
